<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find swarm_collection)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find swarm_collection)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>


  <rosparam file="$(find swarm_collection)/config/firefly1_config.yaml" command="load"/>

  <group ns="$(arg mav_name)1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)1"/>
      <arg name="x" value="0.0"/>
      <arg name="y" value="0.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="mav_hover" pkg="swarm_collection" type="mav_hover" output="screen"/>
    <node name="gripper_control" pkg="swarm_collection" type="gripper_control.py" output="screen"/>
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->


    <!-- load the controllers -->
    <rosparam file="$(find swarm_collection)/config/firefly1_config.yaml" command="load"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/firefly1" output="screen" respawn="false"
      args=" joint_state_controller firefly/arm1_joint_position_controller firefly/arm2_joint_position_controller firefly/arm3_joint_position_controller --timeout 50"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <rosparam file="$(find swarm_collection)/config/firefly1_config.yaml" command="load"/>

      <remap from="/joint_states" to="/firefly1/joint_states" />
    </node>

  </group>

  <group ns="$(arg mav_name)2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)2"/>
      <arg name="x" value="1.0"/>
      <arg name="y" value="1.0"/>


    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>


    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->


    <!-- load the controllers -->
    <rosparam file="$(find swarm_collection)/config/firefly1_config.yaml" command="load"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/firefly2" output="screen" respawn="false"
      args=" joint_state_controller firefly/arm1_joint_position_controller firefly/arm2_joint_position_controller firefly/arm3_joint_position_controller --timeout 50"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <rosparam file="$(find swarm_collection)/config/firefly1_config.yaml" command="load"/>

      <remap from="/joint_states" to="/firefly2/joint_states" />
    </node>

  </group>





</launch>
