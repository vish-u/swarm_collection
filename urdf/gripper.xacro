<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
<!-- mass of arm = 0.12781 -->



<!-- Inertia of Hub

<inertia
  ixx="2.575E-05"
  ixy="-6.389E-10"
  ixz="2.3003E-11"
  iyy="2.5749E-05"
  iyz="3.7001E-10"
  izz="4.5243E-05" /> -->


  <!-- Inertia of arm

 <inertia
    ixx="0.00027224"
    ixy="-6.26E-11"
    ixz="-5.2198E-10"
    iyy="0.00022223"
    iyz="-7.6551E-05"
    izz="6.3032E-05" /> -->
<!--for hub -->


  <xacro:macro name="hub_macro"
    params="robot_namespace suffix direction motor_constant moment_constant parent mass_rotor radius_rotor time_constant_up time_constant_down max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color use_own_mesh mesh *origin *inertia">

    <joint name="${robot_namespace}/hub_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 0" rpy="0 0 0" />
      <parent link="${parent}" />
      <child link="${robot_namespace}/hub" />
    </joint>

    <link name="${robot_namespace}/hub">
      <inertial>
        <mass value="0.031918" /> <!-- [kg] -->
        <inertia
          ixx="255.496140E-6"
          ixy="-0.048915E-6"
          ixz="-0.024520E-6"
          iyy="255.632690E-6"
          iyz="0.105558E-6"
          izz="448.948303E-6" />
      </inertial>
      <visual>
        <origin  xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://swarm_collection/meshes/hub.STL" scale="1 1 1" />
        </geometry>
      </visual>
      <collision>
        <origin  xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh
            filename="package://swarm_collection/meshes/hub.STL" />
        </geometry>
      </collision>
    </link>

    <gazebo>
        <plugin name="${robot_namespace}_gripper_ros_control" filename="libgazebo_ros_control.so">
    	  <!--this is the namespace in the yaml file-->
          <robotNamespace>/firefly</robotNamespace>
          <!--The two lines below came from: https://answers.ros.org/question/292444/gazebo_ros_control-plugin-gazeboroscontrolplugin-missing-legacymodens-defaultrobothwsim/-->
          <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>
  </xacro:macro>


  <!-- for arm1 -->
  <xacro:macro name="arm_macro"
    params="robot_namespace parent arm_number axisxyz axisrpy originxyz originrpy *origin *inertia">

    <joint name="${robot_namespace}/arm${arm_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz= "${axisxyz}" rpy="${axisrpy}" />
      <parent link="${robot_namespace}/hub" />
      <child link="${robot_namespace}/arm${arm_number}" />
    </joint>

    <link name="${robot_namespace}/arm${arm_number}">
      <inertial>
        <mass value="0.05" /> <!-- [kg] -->
        <inertia
          ixx="2714.030518E-6"
          ixy="0.000007E-6"
          ixz="0.000038E-6"
          iyy="2216.979248E-6"
          iyz="-762.669067E-6"
          izz="627.139465E-6" />
      </inertial>
      <visual>
        <origin  xyz= "${originxyz}" rpy="${originrpy}"  />
        <geometry>
            <mesh filename="package://swarm_collection/meshes/arm_link.STL" scale="1 1 1" />
        </geometry>
      </visual>
      <collision>
        <origin  xyz= "${originxyz}" rpy="${originrpy}"  />
        <geometry>
          <mesh
            filename="package://swarm_collection/meshes/arm_link.STL" />
        </geometry>
      </collision>
    </link>



    <!-- transmission is the ability to define the ros controller used to control the joint. -->
    <transmission name="${robot_namespace}/arm${arm_number}_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="motor${arm_number}">
        <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface> -->
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${robot_namespace}/arm${arm_number}_joint">
        <!--lets use a postion type interface, which is a mechanism for ros_control
            to communicate with hardware. See: https://wiki.ros.org/ros_control-->
        <!--hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface-->
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>
</robot>
